/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface ISuperAgreementContract
  extends Truffle.Contract<ISuperAgreementInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<ISuperAgreementInstance>;
}

type AllEvents = never;

export interface ISuperAgreementInstance extends Truffle.ContractInstance {
  /**
   * Get the type of the agreement class
   */
  agreementType(txDetails?: Truffle.TransactionDetails): Promise<string>;

  /**
   * Calculate the real-time balance for the account of this agreement class
   * @param account Account the state belongs to
   * @param time Time used for the calculation
   */
  realtimeBalanceOf(
    token: string,
    account: string,
    time: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ 0: BN; 1: BN; 2: BN }>;

  methods: {
    /**
     * Get the type of the agreement class
     */
    agreementType(txDetails?: Truffle.TransactionDetails): Promise<string>;

    /**
     * Calculate the real-time balance for the account of this agreement class
     * @param account Account the state belongs to
     * @param time Time used for the calculation
     */
    realtimeBalanceOf(
      token: string,
      account: string,
      time: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ 0: BN; 1: BN; 2: BN }>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
