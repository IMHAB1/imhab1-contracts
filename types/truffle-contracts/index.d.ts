/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { AccessControlContract } from "./AccessControl";
import { AccessControlEnumerableContract } from "./AccessControlEnumerable";
import { CourseManagerContract } from "./CourseManager";
import { ERC165Contract } from "./ERC165";
import { ERC20Contract } from "./ERC20";
import { ERC20BurnableContract } from "./ERC20Burnable";
import { ERC20PausableContract } from "./ERC20Pausable";
import { ERC20PresetMinterPauserContract } from "./ERC20PresetMinterPauser";
import { ERC20WithTokenInfoContract } from "./ERC20WithTokenInfo";
import { FactoryContract } from "./Factory";
import { IAccessControlContract } from "./IAccessControl";
import { IAccessControlEnumerableContract } from "./IAccessControlEnumerable";
import { IBTContract } from "./IBT";
import { IConstantFlowAgreementV1Contract } from "./IConstantFlowAgreementV1";
import { IERC165Contract } from "./IERC165";
import { IERC20Contract } from "./IERC20";
import { IERC20MetadataContract } from "./IERC20Metadata";
import { IERC777Contract } from "./IERC777";
import { IInstantDistributionAgreementV1Contract } from "./IInstantDistributionAgreementV1";
import { ISuperAgreementContract } from "./ISuperAgreement";
import { ISuperAppContract } from "./ISuperApp";
import { ISuperfluidContract } from "./ISuperfluid";
import { ISuperfluidGovernanceContract } from "./ISuperfluidGovernance";
import { ISuperfluidTokenContract } from "./ISuperfluidToken";
import { ISuperTokenContract } from "./ISuperToken";
import { ISuperTokenFactoryContract } from "./ISuperTokenFactory";
import { OwnableContract } from "./Ownable";
import { PausableContract } from "./Pausable";
import { PaymentReceiverContract } from "./PaymentReceiver";
import { TokenInfoContract } from "./TokenInfo";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "AccessControl"): AccessControlContract;
      require(name: "AccessControlEnumerable"): AccessControlEnumerableContract;
      require(name: "CourseManager"): CourseManagerContract;
      require(name: "ERC165"): ERC165Contract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "ERC20Burnable"): ERC20BurnableContract;
      require(name: "ERC20Pausable"): ERC20PausableContract;
      require(name: "ERC20PresetMinterPauser"): ERC20PresetMinterPauserContract;
      require(name: "ERC20WithTokenInfo"): ERC20WithTokenInfoContract;
      require(name: "Factory"): FactoryContract;
      require(name: "IAccessControl"): IAccessControlContract;
      require(
        name: "IAccessControlEnumerable"
      ): IAccessControlEnumerableContract;
      require(name: "IBT"): IBTContract;
      require(
        name: "IConstantFlowAgreementV1"
      ): IConstantFlowAgreementV1Contract;
      require(name: "IERC165"): IERC165Contract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "IERC20Metadata"): IERC20MetadataContract;
      require(name: "IERC777"): IERC777Contract;
      require(
        name: "IInstantDistributionAgreementV1"
      ): IInstantDistributionAgreementV1Contract;
      require(name: "ISuperAgreement"): ISuperAgreementContract;
      require(name: "ISuperApp"): ISuperAppContract;
      require(name: "ISuperfluid"): ISuperfluidContract;
      require(name: "ISuperfluidGovernance"): ISuperfluidGovernanceContract;
      require(name: "ISuperfluidToken"): ISuperfluidTokenContract;
      require(name: "ISuperToken"): ISuperTokenContract;
      require(name: "ISuperTokenFactory"): ISuperTokenFactoryContract;
      require(name: "Ownable"): OwnableContract;
      require(name: "Pausable"): PausableContract;
      require(name: "PaymentReceiver"): PaymentReceiverContract;
      require(name: "TokenInfo"): TokenInfoContract;
    }
  }
}

export { AccessControlContract, AccessControlInstance } from "./AccessControl";
export {
  AccessControlEnumerableContract,
  AccessControlEnumerableInstance,
} from "./AccessControlEnumerable";
export { CourseManagerContract, CourseManagerInstance } from "./CourseManager";
export { ERC165Contract, ERC165Instance } from "./ERC165";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export { ERC20BurnableContract, ERC20BurnableInstance } from "./ERC20Burnable";
export { ERC20PausableContract, ERC20PausableInstance } from "./ERC20Pausable";
export {
  ERC20PresetMinterPauserContract,
  ERC20PresetMinterPauserInstance,
} from "./ERC20PresetMinterPauser";
export {
  ERC20WithTokenInfoContract,
  ERC20WithTokenInfoInstance,
} from "./ERC20WithTokenInfo";
export { FactoryContract, FactoryInstance } from "./Factory";
export {
  IAccessControlContract,
  IAccessControlInstance,
} from "./IAccessControl";
export {
  IAccessControlEnumerableContract,
  IAccessControlEnumerableInstance,
} from "./IAccessControlEnumerable";
export { IBTContract, IBTInstance } from "./IBT";
export {
  IConstantFlowAgreementV1Contract,
  IConstantFlowAgreementV1Instance,
} from "./IConstantFlowAgreementV1";
export { IERC165Contract, IERC165Instance } from "./IERC165";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  IERC20MetadataContract,
  IERC20MetadataInstance,
} from "./IERC20Metadata";
export { IERC777Contract, IERC777Instance } from "./IERC777";
export {
  IInstantDistributionAgreementV1Contract,
  IInstantDistributionAgreementV1Instance,
} from "./IInstantDistributionAgreementV1";
export {
  ISuperAgreementContract,
  ISuperAgreementInstance,
} from "./ISuperAgreement";
export { ISuperAppContract, ISuperAppInstance } from "./ISuperApp";
export { ISuperfluidContract, ISuperfluidInstance } from "./ISuperfluid";
export {
  ISuperfluidGovernanceContract,
  ISuperfluidGovernanceInstance,
} from "./ISuperfluidGovernance";
export {
  ISuperfluidTokenContract,
  ISuperfluidTokenInstance,
} from "./ISuperfluidToken";
export { ISuperTokenContract, ISuperTokenInstance } from "./ISuperToken";
export {
  ISuperTokenFactoryContract,
  ISuperTokenFactoryInstance,
} from "./ISuperTokenFactory";
export { OwnableContract, OwnableInstance } from "./Ownable";
export { PausableContract, PausableInstance } from "./Pausable";
export {
  PaymentReceiverContract,
  PaymentReceiverInstance,
} from "./PaymentReceiver";
export { TokenInfoContract, TokenInfoInstance } from "./TokenInfo";
